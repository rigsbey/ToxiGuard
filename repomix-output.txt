This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-02-01T21:44:15.843Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
public/
  images/
    platforms/
      fiverr.svg
      linkedin.svg
      upwork.svg
    fiverr-logo.svg
    red-flags.svg
    upwork-logo.svg
  robots.txt
src/
  app/
    api/
      waitlist/
        route.ts
    blog/
      [slug]/
        page.tsx
    layout.tsx
    page.tsx
  components/
    AnimatedSection.tsx
    BarChart.tsx
    ComingSoonBanner.tsx
    ComingSoonSection.tsx
    DemoSection.tsx
    ExitPopup.tsx
    FAQSection.tsx
    Hero.tsx
    MobilePricingCarousel.tsx
    PricingWidget.tsx
    ProblemSection.tsx
    Roadmap.tsx
    RoadmapSection.tsx
    SuccessStories.tsx
    Testimonial.tsx
    WaitlistProgress.tsx
    WaitlistSection.tsx
  config/
    demoCases.ts
  hooks/
    useAnalytics.ts
    useCountdown.ts
    useLossCounter.ts
  lib/
    sentry.ts
  scripts/
    heroAnimations.ts
  styles/
    globals.css
.env.local
.gitignore
app.js
index.html
next-env.d.ts
next.config.js
package.json
postcss.config.js
styles.css
tailwind.config.js
tsconfig.json

================================================================
Files
================================================================

================
File: public/images/platforms/fiverr.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
  <path fill="currentColor" d="M256 48C141.1 48 48 141.1 48 256s93.1 208 208 208 208-93.1 208-208S370.9 48 256 48zm0 398.7c-105.1 0-190.7-85.5-190.7-190.7S150.9 65.3 256 65.3 446.7 150.9 446.7 256 361.1 446.7 256 446.7z"/>
</svg>

================
File: public/images/platforms/linkedin.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
  <path fill="currentColor" d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"/>
</svg>

================
File: public/images/platforms/upwork.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
  <path fill="currentColor" d="M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z"/>
</svg>

================
File: public/images/fiverr-logo.svg
================
<svg height="2500" width="2500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 400"><circle cx="200" cy="200" fill="#00b22d" r="200"/><g fill="#fff"><path d="M364.4 162.7c0-6.6-5.2-12-11.8-12-6.4 0-11.7 5.3-11.7 12 0 6.6 5.2 12 11.7 12 6.6.1 11.8-5.3 11.8-12zm-11.8 8.7c-4.5 0-8-3.8-8-8.7 0-4.8 3.5-8.6 8-8.6 4.6 0 8.2 3.8 8.2 8.6 0 4.9-3.6 8.7-8.2 8.7z"/><path d="M355.8 163.7c.6-.2 1.9-1.1 1.9-3 0-2.3-1.5-3.7-4-3.7h-5.3v11.3h3.5v-3.8h.9l1.6 3.8h3.8l-2.1-3.9c-.2-.6-.3-.7-.3-.7zm-3-1.6h-.9v-2.7h.9c.8 0 1.2.4 1.2 1.3.1.9-.4 1.4-1.2 1.4z"/><circle cx="104.6" cy="163" r="9"/><path d="M114 177.9H72.8v-2.7c0-5.3 5.3-5.4 8-5.4 3.1 0 4.5.3 4.5.3v-14.6s-2.8-.4-6.6-.4c-8.6 0-24.5 2.4-24.5 20.6v2.3h-7.5v13.5h7.5V220h-7v13.5H81V220h-8.2v-28.5h22.5V220h-7v13.5H121V220h-7zm70 0h-29.5v13.5h5l-6.4 20c-1.2 3.3-1.5 7.3-1.5 7.3h-.4s-.3-4-1.5-7.3l-6.4-20h5v-13.5h-29.5v13.5h6.2l15.4 42h22l15.4-42h6.2zm54.6 25.5c0-15.4-9.3-26.8-25.8-26.8-17.9 0-28.9 12.7-28.9 29 0 14.8 10.7 29.1 30.5 29.1 15 0 23.9-7.8 23.9-7.8l-6.8-12.9s-7.4 5.3-15.6 5.3c-5.9 0-11.5-3.1-12.9-10.2h35.2c-.1-.1.4-3.9.4-5.7zm-35.2-4.6c1-4.3 3.6-8.2 8.9-8.2 4.1 0 7 3.8 7 8.2zm114.1-8.1h-.2s.2-1.1.2-2.8V185c0-5.1-2.8-7.1-7.9-7.1h-17.5v13.5h5.2c1.5 0 2.4.9 2.4 2.4V220h-7.5v13.5h33.7V220h-7.5v-8.1c0-10.1 5-16.7 15.3-16.7 2.3 0 3.8.3 3.8.3v-18.3s-1.1-.2-2.2-.2c-8.4-.1-15.4 6.1-17.8 13.7zm-49.3 0h-.2s.2-1.1.2-2.8V185c0-5.1-2.8-7.1-7.9-7.1h-17.5v13.5h5.2c1.5 0 2.4.9 2.4 2.4V220h-7.5v13.5h33.7V220h-7.5v-8.1c0-10.1 5-16.7 15.3-16.7 2.3 0 3.8.3 3.8.3v-18.3s-1.1-.2-2.2-.2c-8.5-.1-15.5 6.1-17.8 13.7z"/></g></svg>

================
File: public/images/red-flags.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
  <rect x="5" y="5" width="10" height="10" fill="#ff4d4d"/>
</svg>

================
File: public/images/upwork-logo.svg
================
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
<svg width="800px" height="800px" viewBox="0 -179.5 512 512" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid">
	<g>
		<path d="M140.106589,96.6278184 C131.785652,96.6278184 123.989458,93.1045388 116.905417,87.3698389 L118.629575,79.2737921 L118.704539,78.9739385 C120.241288,70.3531479 125.113909,55.8852123 140.106589,55.8852123 C151.351098,55.8852123 160.496633,65.0307467 160.496633,76.2752562 C160.459151,87.482284 151.313616,96.6278184 140.106589,96.6278184 L140.106589,96.6278184 Z M140.106589,35.2327965 C120.953441,35.2327965 106.110688,47.6767204 100.076135,68.1417277 C90.8556369,54.310981 83.884041,37.7065886 79.7985359,23.7259151 L59.1836018,23.7259151 L59.1836018,77.3622255 C59.1836018,87.9320644 50.5628111,96.5528551 39.9929722,96.5528551 C29.4231332,96.5528551 20.8023426,87.9320644 20.8023426,77.3622255 L20.8023426,23.7259151 L0.187408492,23.7259151 L0.187408492,77.3622255 C0.112445095,99.3265007 17.9912152,117.355198 39.9554905,117.355198 C61.9197657,117.355198 79.7985359,99.3265007 79.7985359,77.3622255 L79.7985359,68.3666179 C83.8090776,76.7250366 88.7191801,85.1584187 94.6787701,92.6547584 L82.0474378,152.025769 L103.149634,152.025769 L112.295168,108.959297 C120.316252,114.09429 129.53675,117.317716 140.106589,117.317716 C162.708053,117.317716 181.111567,98.801757 181.111567,76.2002928 C181.111567,53.6363104 162.708053,35.2327965 140.106589,35.2327965 L140.106589,35.2327965 Z" fill="#6FDA44">
</path>
		<path d="M244.043338,37.5566618 L257.349341,91.1929722 L272.004685,37.5566618 L289.471157,37.5566618 L266.944656,115.068814 L249.478184,115.068814 L235.647438,61.0951684 L221.854173,115.031332 L204.387701,115.031332 L181.861201,37.5191801 L199.327672,37.5191801 L213.983016,91.1554905 L227.289019,37.5191801 L244.043338,37.5191801 L244.043338,37.5566618 Z M331.26325,35.2327965 C308.586823,35.2327965 290.220791,53.6363104 290.220791,76.2752562 C290.220791,98.9516837 308.624305,117.317716 331.26325,117.317716 C353.939678,117.317716 372.343192,98.9516837 372.343192,76.2752562 C372.343192,53.5988287 353.939678,35.2327965 331.26325,35.2327965 Z M331.26325,100.450952 C317.919766,100.450952 307.125037,89.6562225 307.125037,76.3127379 C307.125037,62.9692533 317.957247,52.1745242 331.26325,52.1745242 C344.606735,52.1745242 355.401464,62.9692533 355.401464,76.3127379 C355.401464,89.6187408 344.606735,100.450952 331.26325,100.450952 Z M422.231332,54.9106881 C410.499561,54.9106881 401.016691,64.4310395 401.016691,76.1253294 L401.016691,115.031332 L383.437775,115.031332 L383.437775,37.5566618 L401.016691,37.5566618 L401.016691,49.4758419 C401.016691,49.4758419 408.513031,37.5191801 423.918009,37.5191801 L429.315373,37.5191801 L429.315373,54.9106881 L422.231332,54.9106881 Z M481.227526,73.2767204 C493.708931,66.2301611 502.179795,52.8491947 502.179795,37.5191801 L484.600878,37.5191801 C484.600878,50.450366 474.106003,60.9452416 461.174817,60.9452416 L458.81347,60.9452416 L458.81347,0.149926794 L441.234553,0.149926794 L441.234553,115.031332 L458.81347,115.031332 L458.81347,78.5241581 L460.912445,78.5241581 C462.636603,78.5241581 464.885505,79.6486091 465.897511,81.0354319 L490.860322,115.031332 L511.925037,115.031332 L481.227526,73.2767204 Z" fill="#000000">
</path>
	</g>
</svg>

================
File: public/robots.txt
================
User-agent: *
Allow: /
Sitemap: https://toxiguard.com/sitemap.xml

================
File: src/app/api/waitlist/route.ts
================
// УДАЛИТЬ ЭТОТ ФАЙЛ

================
File: src/app/blog/[slug]/page.tsx
================
import { Metadata } from 'next';
import Image from 'next/image';
import Link from 'next/link';

type Params = {
  params: {
    slug: string
  }
}

const articles = {
  'elizabeth-ux': {
    title: 'How ToxicGuard Saved 50+ Freelance Hours/Month: UX Designer Case Study',
    content: `
      <div class="prose lg:prose-xl">
        <h2>The Challenge: Toxic Client Red Flags</h2>
        <p>Project requirements:</p>
        <ul>
          <li>30 design mockups in 1 week</li>
          <li>$200 budget (83% below market rate)</li>
          <li>"Pay after approval" terms</li>
        </ul>

        <h2>The Solution: AI Risk Detection</h2>
        <p>ToxicGuard analysis revealed:</p>
        <div class="bg-red-50 p-4 rounded-lg my-6">
          <h3 class="text-red-600 font-bold mb-2">🚩 5 Critical Red Flags</h3>
          <ul class="list-disc pl-6">
            <li>Unrealistic deadline</li>
            <li>Below-market budget</li>
            <li>High payment risk score (92/100)</li>
          </ul>
        </div>

        <h2>The Result: Time & Money Saved</h2>
        <div class="grid md:grid-cols-2 gap-6 my-8">
          <div class="bg-green-50 p-6 rounded-xl">
            <div class="text-3xl mb-2">⏳ 50h</div>
            <div class="font-medium">Monthly time saved</div>
          </div>
          <div class="bg-blue-50 p-6 rounded-xl">
            <div class="text-3xl mb-2">💰 $1300+</div>
            <div class="font-medium">Additional monthly income</div>
          </div>
        </div>
      </div>
    `,
    seoDescription: 'Learn how UX designer saved 50+ hours/month avoiding toxic clients using ToxicGuard AI risk detection',
    image: '/images/case-study-1.jpg'
  },
  // Add other articles
};

export async function generateMetadata({ params }: Params): Promise<Metadata> {
  const article = articles[params.slug as keyof typeof articles];
  
  if (!article) {
    return {
      title: 'Article Not Found | ToxiGuard Blog',
      description: 'The requested article does not exist',
    }
  }

  return {
    title: `${article.title} | ToxiGuard Blog`,
    description: article.seoDescription,
    openGraph: {
      images: [article.image]
    }
  };
}

export default function BlogPost({ params }: Params) {
  const article = articles[params.slug as keyof typeof articles];

  if (!article) {
    return (
      <div className="max-w-3xl mx-auto px-4 py-16 text-center">
        <h1 className="text-4xl font-bold mb-6">Article Not Found</h1>
        <p className="text-gray-600 mb-6">The requested article does not exist.</p>
        <Link
          href="/blog"
          className="bg-primary-blue text-white px-8 py-4 rounded-full text-lg font-medium hover:bg-primary-blue/90 transition-all"
        >
          View All Articles
        </Link>
      </div>
    )
  }

  return (
    <article className="max-w-3xl mx-auto px-4 py-16">
      <header className="mb-12">
        <h1 className="text-4xl font-bold mb-6">{article.title}</h1>
        <Image
          src={article.image}
          alt={article.title}
          width={800}
          height={450}
          className="rounded-xl"
        />
      </header>

      <div 
        className="prose lg:prose-xl"
        dangerouslySetInnerHTML={{ __html: article.content }}
      />

      <section className="mt-16 bg-blue-50 p-8 rounded-xl text-center">
        <h2 className="text-2xl font-bold mb-4">Ready to Protect Your Business?</h2>
        <p className="mb-6">Join 8,214+ professionals using ToxiGuard for client risk detection</p>
        <Link
          href="/waitlist"
          className="bg-primary-blue text-white px-8 py-4 rounded-full text-lg font-medium hover:bg-primary-blue/90 transition-all"
        >
          Get Early Access Now
        </Link>
      </section>

      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Article",
            "headline": article.title,
            "image": article.image,
            "author": {
              "@type": "Person",
              "name": "ToxicGuard Team"
            },
            "publisher": {
              "@type": "Organization",
              "name": "ToxicGuard",
              "logo": {
                "@type": "ImageObject",
                "url": "https://toxiguard.com/logo.png"
              }
            },
            "description": article.seoDescription,
            "mainEntityOfPage": {
              "@type": "WebPage",
              "@id": `https://toxiguard.com/blog/${params.slug}`
            }
          })
        }}
      />
    </article>
  );
}

================
File: src/app/layout.tsx
================
import type { Metadata } from 'next'
import { Inter, Space_Grotesk } from 'next/font/google'
import '@/styles/globals.css'

const inter = Inter({ subsets: ['latin'] })
const spaceGrotesk = Space_Grotesk({
  subsets: ['latin'],
  variable: '--font-space-grotesk'
})

export const metadata: Metadata = {
  title: {
    default: 'ToxiGuard - AI Client Risk Detection for Freelancers',
    template: '%s | ToxiGuard Blog'
  },
  description: 'AI-powered protection against toxic clients and payment risks',
  openGraph: {
    type: 'website',
    locale: 'en_US',
    url: 'https://toxiguard.com/',
    siteName: 'ToxiGuard',
    images: [{
      url: 'https://toxiguard.com/og-default.jpg',
      width: 1200,
      height: 630,
    }]
  }
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        {children}
      </body>
    </html>
  )
}

================
File: src/app/page.tsx
================
import Hero from '@/components/Hero'
import ComingSoonSection from '@/components/ComingSoonSection'
import FAQSection from '@/components/FAQSection'
import RoadmapSection from '@/components/RoadmapSection'
import ComingSoonBanner from '@/components/ComingSoonBanner'
import ProblemSection from '@/components/ProblemSection'
import DemoSection from '@/components/DemoSection'
import WaitlistSection from '@/components/WaitlistSection'
import SuccessStories from '@/components/SuccessStories'

export default function Home() {
  return (
    <>
      <ComingSoonBanner />
      <main>
        <Hero />
        <ProblemSection />
        <DemoSection />
        <WaitlistSection />
        <RoadmapSection />
        <ComingSoonSection />
        <SuccessStories />
        <FAQSection />
        {/* Other sections */}
      </main>
    </>
  )
}

================
File: src/components/AnimatedSection.tsx
================
import { motion } from 'framer-motion';

export default function AnimatedSection({ children, delay = 0 }) {
  return (
    <motion.section
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true, margin: "-100px" }}
      transition={{ duration: 0.6, delay }}
    >
      {children}
    </motion.section>
  );
}

================
File: src/components/BarChart.tsx
================
'use client';

import { motion } from 'framer-motion';

interface BarChartProps {
  data: Array<{ label: string; value: number; color: string }>;
  className?: string;
}

const BarChart = ({ data, className }: BarChartProps) => {
  return (
    <div className={`flex items-end gap-6 ${className}`} style={{ height: '260px' }}>
      {data.map((item, index) => (
        <motion.div 
          key={index}
          initial={{ height: 0 }}
          whileInView={{ height: `${item.value}%` }}
          viewport={{ once: true }}
          transition={{ duration: 0.8, type: 'spring' }}
          style={{ 
            backgroundColor: item.color,
            backgroundImage: `linear-gradient(to top, ${item.color} 0%, ${item.color}DD 100%)`,
            boxShadow: `0 15px 40px ${item.color}40`,
            width: '80px'
          }}
          className="relative rounded-2xl group cursor-pointer hover:-translate-y-2 transition-transform"
        >
          <div className="absolute bottom-full left-1/2 -translate-x-1/2 mb-3 opacity-0 group-hover:opacity-100 transition-opacity">
            <div className="bg-gray-800 text-white px-3 py-1.5 rounded-lg text-sm font-medium shadow-lg">
              {item.value}%
              <div className="absolute w-3 h-3 bg-gray-800 rotate-45 -bottom-1 left-1/2 -translate-x-1/2" />
            </div>
          </div>
          
          <div className="absolute -top-8 left-1/2 -translate-x-1/2 text-sm font-medium text-gray-600">
            {item.label}
          </div>
        </motion.div>
      ))}
    </div>
  );
};

export { BarChart };

================
File: src/components/ComingSoonBanner.tsx
================
export default function ComingSoonBanner() {
  return (
    <div className="fixed top-0 w-full bg-gradient-to-r from-blue-600 to-purple-600 z-50 group">
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between py-2">
          <div className="flex items-center gap-2">
            <span className="text-white font-medium">🚀 Early Access Launch</span>
            <span className="text-white/80 text-sm">| Limited spots available</span>
          </div>
          
          <button className="relative flex items-center gap-2 px-6 py-2 bg-white text-red-600 
                          rounded-full text-sm font-bold hover:scale-105 transition-transform
                          shadow-lg hover:shadow-red-200">
            <span>Get 3 Months Free</span>
            <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 text-red-500" viewBox="0 0 24 24">
              <path fill="currentColor" d="M8.59 16.59L13.17 12L8.59 7.41L10 6l6 6l-6 6l-1.41-1.41z"/>
            </svg>
          </button>
        </div>
      </div>
    </div>
  );
}

================
File: src/components/ComingSoonSection.tsx
================
'use client';

import { motion } from 'framer-motion';

export default function ComingSoonSection() {
  return (
    <section className="bg-gradient-to-b from-white to-gray-50">
      <div className="md:hidden fixed bottom-0 left-0 w-full bg-toxic-red p-4 z-50">
        <motion.button
          initial={{ y: 100 }}
          animate={{ y: 0 }}
          className="w-full bg-white text-toxic-red py-3 rounded-full font-bold"
        >
          Get Early Access
        </motion.button>
      </div>
    </section>
  );
}

================
File: src/components/DemoSection.tsx
================
'use client';

import { motion } from 'framer-motion';
import AnimatedSection from './AnimatedSection';
import { 
  InformationCircleIcon, 
  CheckBadgeIcon, 
  ExclamationTriangleIcon, 
  ShoppingCartIcon,
  XCircleIcon,
  CheckCircleIcon,
  CurrencyDollarIcon,
  DevicePhoneMobileIcon,
  ArrowsRightLeftIcon
} from '@heroicons/react/24/outline';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@radix-ui/react-tooltip';
import { AlertTriangle, Clock, Wallet, Edit3 } from 'lucide-react';

interface Project {
  title: string;
  riskLevel: number;
  redFlags: RedFlag[];
  icon: JSX.Element;
  content: string;
  badExample: string;
  goodExample: string;
}

interface RedFlag {
  label: string;
  icon: JSX.Element;
  tip: string;
}

const demoProjects: Project[] = [
  {
    title: "Mobile App Design",
    icon: <Edit3 className="w-6 h-6 text-toxic-red" />,
    content: "Looking for designer to create 50 screens for fitness app. Need unlimited revisions. Final payment after investor approval.",
    riskLevel: 87,
    redFlags: [
      { label: "Scope creep", icon: <AlertTriangle className="w-4 h-4" />, tip: "Unlimited revisions = endless project" },
      { label: "Payment delay", icon: <Wallet className="w-4 h-4" />, tip: "Investor-dependent payment is risky" },
      { label: "Vague requirements", icon: <ExclamationTriangleIcon className="w-4 h-4" />, tip: "No clear specifications provided" }
    ],
    badExample: "Looking for designer to create 50 screens for fitness app. Need unlimited revisions. Final payment after investor approval.",
    goodExample: "Reasonable budget: $5,000+ for MVP with defined scope (20 core screens, 2 revision rounds)"
  }
];

interface DemoSectionProps {
  projects?: Project[];
}

export default function DemoSection({ 
  projects = demoProjects
}: DemoSectionProps) {
  return (
    <section className="py-20 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-12">Toxic vs Safe Projects</h2>
        
        <div className="space-y-12">
          {projects.map((project, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              className="grid md:grid-cols-2 gap-8"
            >
              {/* Токсичный проект */}
              <div className="bg-red-50/50 p-6 rounded-xl border-2 border-red-100">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                    <XCircleIcon className="w-5 h-5 text-red-600" />
                  </div>
                  <h3 className="text-xl font-bold text-red-800">Toxic Project</h3>
                </div>
                <blockquote className="text-red-900 italic border-l-4 border-red-200 pl-4">
                  "{project.badExample}"
                </blockquote>
                
                {/* Риски */}
                <div className="mt-6 grid gap-4">
                  {project.redFlags.map((flag, i) => (
                    <div key={i} className="bg-white p-4 rounded-lg flex items-start gap-3">
                      <div className="w-6 h-6 bg-red-50 rounded-full flex items-center justify-center">
                        {flag.icon}
                      </div>
                      <div>
                        <h4 className="font-medium text-red-800">{flag.label}</h4>
                        <p className="text-sm text-red-700">{flag.tip}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Безопасная альтернатива */}
              <div className="bg-green-50/50 p-6 rounded-xl border-2 border-green-100">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                    <CheckCircleIcon className="w-5 h-5 text-green-600" />
                  </div>
                  <h3 className="text-xl font-bold text-green-800">Safe Alternative</h3>
                </div>
                <div className="text-green-900">
                  <p className="mb-4">"Reasonable project:"</p>
                  <ul className="space-y-2">
                    <li className="flex items-center gap-2">
                      <CurrencyDollarIcon className="w-5 h-5 text-green-600" />
                      <span>Budget: $5,000+</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <DevicePhoneMobileIcon className="w-5 h-5 text-green-600" />
                      <span>MVP: 20 core screens</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <ArrowsRightLeftIcon className="w-5 h-5 text-green-600" />
                      <span>Revisions: 2 rounds max</span>
                    </li>
                  </ul>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}

================
File: src/components/ExitPopup.tsx
================
'use client';

import { useEffect, useState } from 'react';
import { AnimatePresence, motion } from 'framer-motion';

export default function ExitPopup() {
  const [isOpen, setIsOpen] = useState(false);
  const [email, setEmail] = useState('');

  useEffect(() => {
    const handleMouseLeave = (e) => {
      if (e.clientY < 0 && !isOpen) {
        setIsOpen(true);
      }
    };

    document.addEventListener('mouseleave', handleMouseLeave);
    return () => document.removeEventListener('mouseleave', handleMouseLeave);
  }, []);

  return (
    <AnimatePresence>
      {isOpen && (
        <div className="fixed inset-0 bg-black/50 z-[999] flex items-center justify-center p-4">
          <motion.div
            initial={{ scale: 0.8, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            className="bg-white rounded-2xl p-8 max-w-md w-full"
          >
            <h3 className="text-2xl font-bold mb-4">Wait! Get 3 Extra Months Free</h3>
            <p className="text-gray-600 mb-6">
              Join our waitlist now and unlock exclusive benefits when we launch
            </p>
            <form className="space-y-4">
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                placeholder="your@email.com"
                className="w-full px-4 py-3 rounded-full border"
              />
              <button
                type="submit"
                className="w-full bg-toxic-red text-white py-3 rounded-full font-bold"
              >
                Claim My Bonus →
              </button>
            </form>
          </motion.div>
        </div>
      )}
    </AnimatePresence>
  );
}

================
File: src/components/FAQSection.tsx
================
'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';
import { 
  ChevronDownIcon, 
  QuestionMarkCircleIcon, 
  ShieldCheckIcon 
} from '@heroicons/react/24/outline';

interface FAQItem {
  question: string;
  answer: string;
}

export default function FAQSection() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const faqs: FAQItem[] = [
    {
      question: "What is ToxicGuard?",
      answer: "A platform that protects freelancers from toxic clients. Uses AI to analyze projects for risks like unrealistic deadlines, low budgets, and payment delays."
    },
    {
      question: "How does the risk analysis work?",
      answer: "Our AI scans project descriptions, identifying 23+ risk factors including budget, deadlines, and payment terms. Results in instant risk assessment."
    },
    {
      question: "How do you protect my data?",
      answer: "All data is encrypted with 256-bit SSL. We comply with GDPR and don't store personal information."
    },
    {
      question: "How can I join early access?",
      answer: "Leave your email in the form below - you'll get 3 months free and exclusive updates before the official launch."
    },
    {
      question: "What features are coming next?",
      answer: "CRM integrations, advanced analytics, AI negotiation assistant. Details in our Roadmap section."
    },
    {
      question: "Which platforms do you support?",
      answer: "Currently analyzing Upwork and Fiverr projects, with more platforms coming soon."
    },
    {
      question: "Is there a free plan?",
      answer: "Yes, our Starter plan is free forever with basic risk analysis features."
    }
  ];

  return (
    <section className="py-20 bg-gray-50">
      <div className="max-w-4xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-12">Frequently Asked Questions</h2>
        
        <div className="space-y-6">
          {faqs.map((faq, index) => (
            <motion.div
              key={faq.question}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.3, delay: index * 0.1 }}
            >
              <div 
                className="bg-white p-6 rounded-xl shadow-sm cursor-pointer hover:bg-gray-50 transition-colors"
                onClick={() => setOpenIndex(openIndex === index ? null : index)}
              >
                <div className="flex justify-between items-center">
                  <h3 className="text-xl font-bold flex items-center gap-3">
                    {index === 0 ? (
                      <QuestionMarkCircleIcon className="w-6 h-6 text-blue-600" />
                    ) : index === 3 ? (
                      <ShieldCheckIcon className="w-6 h-6 text-green-600" />
                    ) : (
                      <ChevronDownIcon className="w-6 h-6 text-purple-600" />
                    )}
                    {faq.question}
                  </h3>
                  <ChevronDownIcon className={`w-5 h-5 transition-transform ${
                    openIndex === index ? 'rotate-180' : ''
                  }`} />
                </div>
                
                <motion.div
                  initial={{ height: 0, opacity: 0 }}
                  animate={{
                    height: openIndex === index ? 'auto' : 0,
                    opacity: openIndex === index ? 1 : 0
                  }}
                  className="overflow-hidden"
                >
                  <p className="pt-4 text-gray-600">{faq.answer}</p>
                </motion.div>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "FAQPage",
            mainEntity: faqs.map(faq => ({
              "@type": "Question",
              name: faq.question,
              acceptedAnswer: {
                "@type": "Answer",
                text: faq.answer
              }
            }))
          })
        }}
      />
    </section>
  );
}

================
File: src/components/Hero.tsx
================
'use client';

import Image from 'next/image'
import { useState } from 'react';
import { CheckBadgeIcon, ArrowRightIcon, ShieldCheckIcon, CurrencyDollarIcon, LockClosedIcon } from '@heroicons/react/24/outline';
import { motion } from 'framer-motion';

export default function Hero() {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <motion.section
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="relative min-h-[90vh] bg-gradient-to-b from-[#FDF8F3] to-white py-12 md:py-20"
    >
      {/* Floating Particles Background */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Добавим анимированные частицы позже через CSS */}
      </div>

      {/* Coming Soon badge */}
      <div className="text-center mb-6">
        <span className="bg-red-100 text-danger px-4 py-2 rounded-full text-sm font-medium inline-flex items-center gap-2 shadow-sm">
          <span className="animate-pulse">🚀</span>
          Coming Soon
        </span>
      </div>

      {/* Main Content */}
      <div className="max-w-4xl mx-auto px-4 text-center relative z-10 space-y-8">
        <h1 className="text-5xl sm:text-6xl font-bold text-gray-900 leading-tight">
          <span className="bg-gradient-to-r from-[#2A5CAA] to-[#3B82F6] bg-clip-text text-transparent">
            Early Access Launch
          </span>
          <br />
          <span className="text-2xl sm:text-3xl text-gray-600">
            Limited spots available - AI protection for freelancers
          </span>
        </h1>

        {/* Список выгод с эмодзи */}
        <div className="bg-white/90 backdrop-blur-sm rounded-xl p-6 shadow-lg mx-auto max-w-2xl">
          <ul className="space-y-4 text-lg">
            <li className="flex items-center gap-3 text-danger">
              <span className="text-2xl">✅</span>
              Identify red flags instantly
            </li>
            <li className="flex items-center gap-3 text-danger">
              <span className="text-2xl">⏳</span>
              Save 100+ negotiation hours
            </li>
            <li className="flex items-center gap-3 text-danger">
              <span className="text-2xl">💸</span>
              Secure payments - 87% fewer delays
            </li>
          </ul>
        </div>

        {/* Социальное доказательство */}
        <div className="space-y-4">
          <div className="flex items-center justify-center gap-2">
            <LockClosedIcon className="w-4 h-4 text-green-600" />
            <span className="text-xs text-gray-500">256-bit SSL encryption</span>
          </div>
        </div>

        {/* CTA и статистика */}
        <div className="space-y-4">
          <motion.button 
            className="bg-[#2A5CAA] text-white px-10 py-5 rounded-full text-xl font-bold shadow-xl hover:bg-[#1E4A8A] transition-all"
          >
            🚀 Get 3 Months Free →
          </motion.button>

          <div className="text-sm text-gray-600">
            <p>Trusted by professionals worldwide</p>
          </div>
        </div>

        {/* Гарантии */}
        <div className="flex flex-wrap justify-center gap-6">
          <div className="flex items-center gap-2">
            <ShieldCheckIcon className="w-5 h-5 text-green-600" />
            <span className="text-sm">GDPR Compliant</span>
          </div>
          <div className="flex items-center gap-2">
            <CurrencyDollarIcon className="w-5 h-5 text-blue-600" />
            <span className="text-sm">30-Day Refund</span>
          </div>
        </div>
      </div>

      {/* Упрощенная сетка фич */}
      <div className="max-w-6xl mx-auto mt-16 px-4">
        <div className="grid md:grid-cols-3 gap-6">
          <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <h3 className="text-xl font-bold mb-3">Instant Red Flag Detection</h3>
            <p className="text-gray-600">AI-powered 3-second scan identifies payment risks and unrealistic deadlines</p>
          </div>
          <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <h3 className="text-xl font-bold mb-3">Payment Protection</h3>
            <p className="text-gray-600">87% fewer payment delays</p>
          </div>
          <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <h3 className="text-xl font-bold mb-3">AI Templates</h3>
            <p className="text-gray-600">Professional response library</p>
          </div>
        </div>
      </div>

      {/* Добавляем логотипы платформ */}
      <div className="mt-16 text-center">
        <p className="text-sm text-gray-500 mb-4">Integrated with</p>
        <div className="flex justify-center items-center gap-8">
          <Image
            src="/images/upwork-logo.svg"
            alt="Upwork integration screenshot showing risk analysis"
            width={120}
            height={40}
            loading="lazy"
            className="opacity-60 hover:opacity-100 transition-opacity"
            priority={false}
          />
          <Image
            src="/images/fiverr-logo.svg"
            alt="Fiverr"
            width={100}
            height={40}
            className="opacity-60 hover:opacity-100 transition-opacity"
          />
        </div>
      </div>
    </motion.section>
  )
}

================
File: src/components/MobilePricingCarousel.tsx
================
'use client';

import React from 'react';
import { motion } from 'framer-motion';
import { CheckIcon } from '@heroicons/react/24/solid';

interface FeatureListProps {
  children: React.ReactNode;
}

const FeatureList: React.FC<FeatureListProps> = ({ children }) => (
  <ul className="space-y-3 mb-8">
    {children}
  </ul>
);

export default function MobilePricingCarousel() {
  return (
    <div className="overflow-x-auto pb-4">
      <div className="flex gap-4 w-max">
        {/* Free Plan */}
        <motion.div 
          className="w-[300px] bg-white p-6 rounded-xl shadow-sm"
          whileHover={{ y: -5 }}
          transition={{ duration: 0.2 }}
        >
          <h3 className="text-xl font-bold mb-2">Free</h3>
          <p className="text-gray-600 mb-4">Perfect for trying out ToxiGuard</p>
          <div className="text-3xl font-bold mb-6">$0</div>
          <FeatureList>
            <li className="flex items-center gap-2">
              <CheckIcon className="w-5 h-5 text-primary-blue" />
              <span>3 scans per month</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckIcon className="w-5 h-5 text-primary-blue" />
              <span>Basic analysis</span>
            </li>
          </FeatureList>
          <button className="w-full bg-white border-2 border-primary-blue text-primary-blue py-3 rounded-full font-medium 
                         hover:bg-primary-blue hover:text-white transition-colors">
            Start Free →
          </button>
        </motion.div>

        {/* Pro Plan */}
        <motion.div 
          className="w-[300px] bg-gradient-to-b from-primary-blue to-blue-800 p-6 rounded-xl shadow-lg text-white"
          whileHover={{ y: -5 }}
          transition={{ duration: 0.2 }}
        >
          <div className="bg-white text-primary-blue text-xs font-bold px-3 py-1 rounded-full inline-block mb-4">
            ⚡ MOST POPULAR
          </div>
          <h3 className="text-xl font-bold mb-2">Pro</h3>
          <p className="text-gray-200 mb-4">For active freelancers</p>
          <div className="text-3xl font-bold mb-6">$19<span className="text-base font-normal">/mo</span></div>
          <FeatureList>
            <li className="flex items-center gap-2">
              <CheckIcon className="w-5 h-5 text-white" />
              <span>Unlimited scans</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckIcon className="w-5 h-5 text-white" />
              <span>Advanced AI analysis</span>
            </li>
          </FeatureList>
          <button className="w-full bg-white text-primary-blue py-3 rounded-full font-medium hover:shadow-lg transition-shadow">
            Start Pro Trial →
          </button>
        </motion.div>
      </div>
    </div>
  );
}

================
File: src/components/PricingWidget.tsx
================
'use client';

import { useState } from 'react';
import MobilePricingCarousel from './MobilePricingCarousel';

export default function PricingWidget() {
  const [toxicity, setToxicity] = useState(0);

  const analyzeText = (text: string) => {
    const newToxicity = Math.min(text.length * 2, 100);
    setToxicity(newToxicity);
  };

  return (
    <section className="max-w-7xl mx-auto px-4 py-16">
      <div className="text-center mb-16">
        <span className="bg-blue-50 text-primary-blue px-4 py-2 rounded-full text-sm font-medium">
          Pricing & Plans
        </span>
        <h2 className="text-3xl font-bold mt-6 mb-4">
          Start Saving Time & Money Today
        </h2>
        <p className="text-xl text-gray-600 max-w-2xl mx-auto">
          91% users recover $7+ on every $1 invested in ToxiGuard
        </p>
      </div>
      
      <div className="flex flex-col gap-8 md:hidden">
        <MobilePricingCarousel />
      </div>

      <div className="grid md:grid-cols-3 gap-8">
        {/* Starter Plan */}
        <div className="bg-white p-8 rounded-2xl shadow-lg border-2 border-transparent hover:border-primary-blue transition-all">
          <div className="mb-8">
            <h3 className="text-xl font-bold mb-2">Starter</h3>
            <div className="flex items-baseline gap-2">
              <span className="text-3xl font-bold">Free</span>
              <span className="text-gray-500">/ month</span>
            </div>
            <p className="text-gray-600 mt-4">Perfect for trying out ToxiGuard</p>
          </div>

          <ul className="space-y-4 mb-8">
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              5 project scans/month
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Basic risk detection
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Email support
            </li>
          </ul>

          <button className="w-full bg-white border-2 border-primary-blue text-primary-blue py-3 rounded-full font-medium 
                           hover:bg-primary-blue hover:text-white transition-colors">
            Start Free →
          </button>
        </div>

        {/* Pro Plan */}
        <div className="bg-white p-8 rounded-2xl shadow-lg border-2 border-primary-blue relative transform hover:scale-105 transition-all">
          <div className="absolute -top-4 left-1/2 -translate-x-1/2 bg-primary-blue text-white px-4 py-1 rounded-full text-sm">
            Most Popular
          </div>
          
          <div className="mb-8">
            <h3 className="text-xl font-bold mb-2">Professional</h3>
            <div className="flex items-baseline gap-2">
              <span className="text-3xl font-bold">$7</span>
              <span className="text-gray-500">/ month</span>
            </div>
            <p className="text-green-600 font-medium mt-2">Save $840/year on average</p>
          </div>

          <ul className="space-y-4 mb-8">
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Unlimited project scans
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Advanced AI detection
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Response templates
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Priority support
            </li>
          </ul>

          <button className="w-full bg-primary-blue text-white py-3 rounded-full font-medium hover:shadow-lg transition-shadow">
            Start 14-Day Free Trial →
          </button>
        </div>

        {/* Enterprise Plan */}
        <div className="bg-white p-8 rounded-2xl shadow-lg border-2 border-transparent hover:border-primary-blue transition-all">
          <div className="mb-8">
            <h3 className="text-xl font-bold mb-2">Enterprise</h3>
            <div className="flex items-baseline gap-2">
              <span className="text-3xl font-bold">$299</span>
              <span className="text-gray-500">/ month</span>
            </div>
            <p className="text-green-600 font-medium mt-2">Save $3,588/year on average</p>
          </div>

          <ul className="space-y-4 mb-8">
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Everything in Pro
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Team collaboration
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Custom integrations
            </li>
            <li className="flex items-center gap-2">
              <svg className="w-5 h-5 text-primary-blue" viewBox="0 0 24 24">
                <path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
              </svg>
              Dedicated support
            </li>
          </ul>

          <button className="w-full bg-white border-2 border-primary-blue text-primary-blue py-3 rounded-full font-medium 
                           hover:bg-primary-blue hover:text-white transition-colors">
            Contact Sales →
          </button>
        </div>
      </div>

      <div className="mt-16 text-center">
        <p className="text-gray-600 mb-4">Still not sure? Try our free demo with no credit card required</p>
        <button className="bg-toxic-red text-white px-8 py-4 rounded-full hover:shadow-lg transition-shadow">
          Try Free Demo →
        </button>
      </div>
    </section>
  );
}

================
File: src/components/ProblemSection.tsx
================
'use client';
import React from 'react';
import AnimatedSection from './AnimatedSection';

export default function ProblemSection() {
  return (
    <AnimatedSection>
      <div className="py-20 bg-gray-50">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-16">
            <span className="bg-red-50 text-toxic-red px-4 py-2 rounded-full text-sm font-medium">
              The Problem
            </span>
            <h2 className="text-3xl font-bold mt-6 mb-4">
              "I'll Know It When I See It" —<br/>
              <span className="text-toxic-red">How Toxic Clients Drain Your Profit</span>
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              Freelancers lose $7k+/year on toxic projects. Here's what they look like:
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            <div className="bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow">
              <div className="flex items-start gap-4 mb-4">
                <div className="p-2 bg-red-50 rounded-lg">
                  <svg className="w-6 h-6 text-toxic-red" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div>
                  <h3 className="font-semibold mb-2">Unrealistic Expectations</h3>
                  <p className="text-gray-600 text-sm mb-4">Need full e-commerce site by tomorrow. Budget: $100</p>
                  <div className="bg-red-50 text-toxic-red text-xs font-medium px-3 py-1 rounded-full inline-block">83% below market rate</div>
                </div>
              </div>
            </div>
            <div className="bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow">
              <div className="flex items-start gap-4 mb-4">
                <div className="p-2 bg-red-50 rounded-lg">
                  <svg className="w-6 h-6 text-toxic-red" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div>
                  <h3 className="font-semibold mb-2">Scope Creep Risk</h3>
                  <p className="text-gray-600 text-sm mb-4">You're the expert, just figure it out!</p>
                  <div className="bg-red-50 text-toxic-red text-xs font-medium px-3 py-1 rounded-full inline-block">High risk of scope creep</div>
                </div>
              </div>
            </div>
            <div className="bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow">
              <div className="flex items-start gap-4 mb-4">
                <div className="p-2 bg-red-50 rounded-lg">
                  <svg className="w-6 h-6 text-toxic-red" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div>
                  <h3 className="font-semibold mb-2">Payment Risks</h3>
                  <p className="text-gray-600 text-sm mb-4">Payment after project profitability</p>
                  <div className="bg-red-50 text-danger text-xs font-medium px-3 py-1 rounded-full inline-block">Payment risk detected</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </AnimatedSection>
  );
}

================
File: src/components/Roadmap.tsx
================
export default function Roadmap() {
  return (
    <section className="py-20 bg-gray-50">
      <div className="max-w-6xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-12">Development Roadmap</h2>
        
        <div className="grid md:grid-cols-3 gap-8">
          {/* Phase 1 */}
          <div className="bg-white p-6 rounded-xl shadow-sm border-2 border-green-100">
            <div className="flex items-center gap-3 mb-4">
              <span className="text-2xl">🛠️</span>
              <h3 className="text-xl font-bold">Phase 1: Core Features</h3>
            </div>
            <ul className="space-y-3 text-gray-600">
              <li className="flex items-center gap-2">
                <CheckCircleIcon className="w-5 h-5 text-green-500" />
                AI Project Analysis
              </li>
              <li className="flex items-center gap-2">
                <CheckCircleIcon className="w-5 h-5 text-green-500" />
                Basic Templates
              </li>
            </ul>
          </div>

          {/* Phase 2 */}
          <div className="bg-white p-6 rounded-xl shadow-sm border-2 border-blue-100">
            <div className="flex items-center gap-3 mb-4">
              <span className="text-2xl">🚀</span>
              <h3 className="text-xl font-bold">Phase 2: Advanced</h3>
            </div>
            <ul className="space-y-3 text-gray-600">
              <li className="flex items-center gap-2">
                <ArrowPathIcon className="w-5 h-5 text-blue-500 animate-spin" />
                CRM Integration
              </li>
              <li className="flex items-center gap-2">
                <ArrowPathIcon className="w-5 h-5 text-blue-500 animate-spin" />
                Team Collaboration
              </li>
            </ul>
          </div>

          {/* Phase 3 */}
          <div className="bg-white p-6 rounded-xl shadow-sm border-2 border-purple-100">
            <div className="flex items-center gap-3 mb-4">
              <span className="text-2xl">🌐</span>
              <h3 className="text-xl font-bold">Phase 3: Ecosystem</h3>
            </div>
            <ul className="space-y-3 text-gray-600">
              <li className="flex items-center gap-2">
                <ClockIcon className="w-5 h-5 text-purple-500" />
                API Access
              </li>
              <li className="flex items-center gap-2">
                <ClockIcon className="w-5 h-5 text-purple-500" />
                Marketplace
              </li>
            </ul>
          </div>
        </div>
      </div>
    </section>
  )
}

================
File: src/components/RoadmapSection.tsx
================
export default function RoadmapSection() {
  return (
    <section className="py-20 bg-gray-50">
      <div className="max-w-5xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-12">Our Roadmap</h2>
        <div className="grid md:grid-cols-3 gap-8">
          <div className="bg-white p-6 rounded-xl shadow-sm">
            <div className="text-primary-blue font-medium mb-2">Phase 1</div>
            <h3 className="font-bold mb-4">Basic Analysis</h3>
            <ul className="space-y-2 text-gray-600">
              <li>• AI Project Brief Analysis</li>
              <li>• Red Flags Detection</li>
              <li>• Basic Response Templates</li>
            </ul>
          </div>
          <div className="bg-white p-6 rounded-xl shadow-sm">
            <div className="text-primary-blue font-medium mb-2">Phase 2</div>
            <h3 className="font-bold mb-4">Advanced Features</h3>
            <ul className="space-y-2 text-gray-600">
              <li>• CRM Integration</li>
              <li>• Team Collaboration</li>
              <li>• Advanced Analytics</li>
            </ul>
          </div>
          <div className="bg-white p-6 rounded-xl shadow-sm">
            <div className="text-primary-blue font-medium mb-2">Phase 3</div>
            <h3 className="font-bold mb-4">Ecosystem</h3>
            <ul className="space-y-2 text-gray-600">
              <li>• Integration API</li>
              <li>• Templates Marketplace</li>
              <li>• AI Negotiation Assistant</li>
            </ul>
          </div>
        </div>
      </div>
    </section>
  );
}

================
File: src/components/SuccessStories.tsx
================
'use client';

import Image from 'next/image';
import Link from 'next/link';
import { ArrowRightIcon } from '@heroicons/react/24/outline';
import { ClockIcon } from '@heroicons/react/24/outline';
import { motion } from 'framer-motion';
import { BarChart } from './BarChart';
import { SparklesIcon } from '@heroicons/react/24/outline';
import { ShieldCheckIcon } from '@heroicons/react/24/outline';

const caseStudies = [
  {
    id: 'elizabeth-ux',
    title: 'How Elizabeth Saved 50+ Hours/Month Using ToxicGuard to Avoid Toxic Clients',
    excerpt: 'UX designer used AI risk detection to spot unrealistic deadlines and low budgets. 3-second project scan saved 50 hours/month',
    image: '/images/case-study-1.jpg',
    cta: 'Discover how ToxicGuard can save you 50+ hours/month →',
    stats: [
      { icon: '⏳', value: '50h saved/month' },
      { icon: '💰', value: '$1300+ earned' }
    ]
  },
  {
    id: 'james-copywriter',
    title: 'How James Reduced Payment Delays by 87% with ToxicGuard Protection',
    excerpt: 'Freelance writer eliminated "pay after publish" risks using payment security features. Now earns $300 average per project',
    image: '/images/case-study-2.jpg',
    cta: 'See how to secure your payments →',
    stats: [
      { icon: '💸', value: '87% fewer delays' },
      { icon: '📈', value: '$300 avg. project' }
    ]
  }
];

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: { opacity: 1, y: 0 }
};

export default function SuccessStories() {
  return (
    <section className="py-20 bg-gradient-to-b from-blue-50 to-white relative overflow-hidden">
      <div className="max-w-7xl mx-auto px-4">
        <motion.div 
          className="text-center mb-24 space-y-6"
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
        >
          <h2 className="text-5xl font-bold bg-gradient-to-r from-[#2A5CAA] to-[#3B82F6] bg-clip-text text-transparent mb-4 tracking-tight">
            Success Stories That Inspire
          </h2>
          <p className="text-2xl text-gray-800 max-w-3xl mx-auto font-medium leading-relaxed">
            Join <span className="font-bold text-[#2A5CAA]">1,200+ professionals</span> who transformed their freelance business
          </p>
        </motion.div>

        <div className="grid lg:grid-cols-2 gap-8 mb-16">
          {caseStudies.map((caseStudy, index) => (
            <motion.article
              key={caseStudy.id}
              variants={itemVariants}
              className="group relative bg-white rounded-3xl p-10 shadow-2xl hover:shadow-3xl transition-all duration-300 overflow-hidden border border-gray-100"
            >
              <div className="absolute inset-0 bg-gradient-to-b from-white to-gray-50 opacity-0 group-hover:opacity-100 transition-opacity" />
              
              <div className="relative z-10 flex flex-col lg:flex-row gap-10">
                <div className="lg:w-2/5">
                  <div className="relative h-80 rounded-2xl overflow-hidden">
                    <Image 
                      src={caseStudy.image}
                      alt={caseStudy.title}
                      fill
                      className="object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                    <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/60 to-transparent p-6">
                      <div className="flex items-center gap-3 text-white">
                        <ShieldCheckIcon className="w-6 h-6 text-green-400" />
                        <span className="font-semibold">ToxicGuard Verified Case</span>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="lg:w-3/5 space-y-8">
                  <h3 className="text-3xl font-bold text-gray-900 leading-tight">
                    {caseStudy.title}
                  </h3>
                  
                  <div className="grid grid-cols-2 gap-8">
                    <div className="space-y-6">
                      <BarChart 
                        data={[
                          { label: 'Time Saved', value: 50, color: '#3B82F6' },
                          { label: 'Income Growth', value: 75, color: '#10B981' }
                        ]} 
                        className="h-48"
                      />
                    </div>
                    
                    <div className="space-y-6">
                      {caseStudy.stats.map((stat, i) => (
                        <div key={i} className="p-5 bg-gray-50 rounded-xl border border-gray-200">
                          <div className="flex items-center gap-4">
                            <span className="text-3xl">{stat.icon}</span>
                            <div>
                              <p className="text-lg font-semibold text-gray-900">{stat.value}</p>
                              <p className="text-sm text-gray-600 mt-1">Monthly average</p>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  <Link 
                    href={`/blog/${caseStudy.id}`}
                    className="inline-flex items-center gap-4 bg-gradient-to-r from-[#2A5CAA] to-[#3B82F6] text-white px-10 py-5 rounded-xl font-bold hover:shadow-xl transition-all duration-300 group/cta"
                  >
                    <span className="text-lg">{caseStudy.cta}</span>
                    <ArrowRightIcon className="w-7 h-7 transition-transform group-hover/cta:translate-x-3" />
                  </Link>
                </div>
              </div>
            </motion.article>
          ))}
        </div>

        <motion.div 
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mt-20 bg-gradient-to-r from-[#2A5CAA] to-[#3B82F6] rounded-3xl p-1 shadow-2xl"
        >
          <div className="bg-white rounded-2xl p-10 flex flex-col md:flex-row items-center gap-8">
            <div className="shrink-0">
              <div className="w-24 h-24 rounded-full border-4 border-[#2A5CAA] overflow-hidden">
                <Image 
                  src="/images/avatars/sarah.jpg"
                  alt="Sarah"
                  width={96}
                  height={96}
                  className="object-cover"
                />
              </div>
            </div>
            <div className="space-y-4">
              <p className="text-2xl italic text-gray-900 font-medium leading-relaxed">
                "ToxicGuard helped me avoid 3 bad clients last month alone. It's like having a business partner that never sleeps!"
              </p>
              <div>
                <p className="text-lg font-bold text-gray-900">Sarah Johnson</p>
                <p className="text-gray-600">Freelance Designer, San Francisco</p>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
}

================
File: src/components/Testimonial.tsx
================
import { InformationCircleIcon } from "@heroicons/react/24/outline";

const testimonials = [
  {
    name: "Alex K.",
    role: "Freelance Designer",
    experience: "5+ years on Upwork",
    text: "ToxiGuard cut my client conflicts by 90%!",
    badge: "🎯 Beta Tester"
  },
  {
    name: "Maria S.",
    role: "SaaS Developer",
    experience: "Moscow, Russia",
    text: "Saved $12k in potential losses last quarter",
    badge: "🚀 Early Adopter"
  }
];

export default function Testimonial() {
  return (
    <div className="space-y-12">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {testimonials.map((testimonial, index) => (
          <motion.div 
            key={index}
            whileHover={{ scale: 1.02 }}
            className="bg-white p-6 rounded-2xl shadow-lg border border-gray-100 relative"
          >
            <button className="absolute top-4 right-4 text-gray-400 hover:text-toxic-red">
              <InformationCircleIcon className="w-5 h-5" />
            </button>
            <div className="flex items-center gap-4 mb-4">
              <div className="flex items-center justify-center w-12 h-12 rounded-full bg-toxic-red/10 text-toxic-red">
                <span className="text-2xl">👨💻</span>
              </div>
              <div>
                <p className="font-semibold">{testimonial.name}</p>
                <div className="text-sm text-gray-600">
                  <p>{testimonial.role}</p>
                  <p className="text-xs mt-1">{testimonial.experience}</p>
                </div>
              </div>
              <span className="ml-auto text-sm bg-gray-100 px-3 py-1 rounded-full">
                {testimonial.badge}
              </span>
            </div>
            <p className="text-gray-800 pl-2 border-l-4 border-toxic-red">
              “{testimonial.text}”
            </p>
          </motion.div>
        ))}
      </div>
      
      <p className="text-center text-sm text-gray-500 mt-6">
        Results based on beta testing with 127 early users. Individual results may vary.
      </p>
    </div>
  )
}

================
File: src/components/WaitlistProgress.tsx
================
export default function WaitlistProgress({ current = 8214, goal = 10000 }) {
  const progress = Math.min((current / goal) * 100, 100);

  return (
    <div className="space-y-4">
      <div className="h-3 bg-gray-200 rounded-full overflow-hidden">
        <div 
          className="h-full bg-toxic-red transition-all duration-500"
          style={{ width: `${progress}%` }}
        />
      </div>
      <div className="flex justify-between text-sm text-gray-600">
        <span>{current.toLocaleString('en-US')} joined</span>
        <span>Goal: {goal.toLocaleString('en-US')}</span>
      </div>
    </div>
  );
}

================
File: src/components/WaitlistSection.tsx
================
'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';

const API_URL = process.env.NODE_ENV === 'development' 
  ? '/api/tally-proxy' 
  : 'https://api.tally.so/r/mBjL61';

export default function WaitlistSection() {
  const [email, setEmail] = useState('');
  const [isSubmitted, setIsSubmitted] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!email || !/\S+@\S+\.\S+/.test(email)) {
      alert('Please enter a valid email address');
      return;
    }

    try {
      const params = new URLSearchParams();
      params.append('email', email);
      
      const response = await fetch(`https://script.google.com/macros/s/AKfycbwtgVj1y3Oia3wy19afi3p1xGehWAjy9Dnm_Y9GfkHueAv7gMw6MBNwzAh9ZYpy7FPL9g/exec?${params}`, {
        method: 'GET',
        redirect: 'follow',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      });

      const result = await response.text();
      
      if (result === 'Email successfully added') {
        setIsSubmitted(true);
        setEmail('');
        window.trackEvent?.('waitlist_submitted');
      } else {
        throw new Error(result);
      }

    } catch (error) {
      console.error('Error:', error);
      alert(error instanceof Error 
        ? error.message 
        : 'An error occurred. Please try again later.'
      );
    }
  };

  return (
    <section className="py-20 bg-gradient-to-b from-white to-gray-50">
      <div className="max-w-4xl mx-auto px-4 text-center">
        {/* Badge */}
        <motion.span 
          className="bg-blue-50 text-primary-blue px-4 py-2 rounded-full text-sm font-medium inline-block"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          Early Access
        </motion.span>

        {/* Heading */}
        <motion.h2 
          className="text-3xl sm:text-4xl font-bold mb-6"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, delay: 0.1 }}
        >
          Get Early Access to Client Protection AI
        </motion.h2>
        
        {/* Benefits */}
        <div className="flex flex-wrap justify-center gap-4 mb-12">
          {[
            { icon: "🎁", text: "3 Months Free" },
            { icon: "💎", text: "20% Lifetime Discount" },
            { icon: "🔥", text: "Priority Support" }
          ].map((benefit, index) => (
            <motion.div
              key={index}
              className="bg-white px-6 py-3 rounded-full shadow-sm hover:shadow-md transition-all flex items-center gap-2"
              initial={{ opacity: 0, x: -20 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
            >
              <span className="text-2xl">{benefit.icon}</span>
              <span className="font-medium text-gray-800">{benefit.text}</span>
            </motion.div>
          ))}
        </div>

        {/* Form */}
        {isSubmitted ? (
          <motion.div 
            className="bg-green-50 text-green-700 p-6 rounded-xl max-w-md mx-auto"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.3 }}
          >
            <div className="flex items-center gap-3">
              <div className="bg-green-100 p-2 rounded-full">
                <svg className="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                </svg>
              </div>
              <div>
                <p className="text-xl font-medium">Thank you for signing up! 🎉</p>
                <p className="mt-1 text-sm">
                  You'll be the first to know when we launch
                </p>
              </div>
            </div>
          </motion.div>
        ) : (
          <motion.form 
            onSubmit={handleSubmit}
            className="max-w-xl mx-auto"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            <div className="flex flex-col md:flex-row gap-4 mb-4">
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
                placeholder="Enter your work email..."
                className="flex-1 px-6 py-4 rounded-full border-2 border-gray-200 focus:border-primary-blue text-lg"
              />
              <button 
                type="submit"
                className="bg-primary-blue hover:bg-primary-blue/90 text-white px-8 py-4 rounded-full text-lg font-medium transition-all hover:shadow-lg active:scale-95 whitespace-nowrap"
              >
                Join Waitlist
              </button>
            </div>
            <p className="text-sm text-gray-500 mt-2">
              Secure exclusive launch updates and early adopter benefits
            </p>
          </motion.form>
        )}
      </div>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Product",
            name: "ToxiGuard",
            image: "https://toxiguard.com/logo.png",
            description: "AI-powered protection against toxic clients for freelancers",
            brand: {
              "@type": "Brand",
              name: "ToxiGuard"
            },
            offers: {
              "@type": "Offer",
              price: "0",
              priceCurrency: "USD"
            }
          })
        }}
      />
    </section>
  );
}

================
File: src/config/demoCases.ts
================
export const DEMO_CASES = [
  {
    type: 'budget',
    title: "E-commerce Development",
    badExample: "Need full website like Amazon. Budget $500. 3 days deadline",
    goodExample: "Reasonable budget: $5,000+ for MVP",
    riskLevel: 92,
    analysis: "Market rate for similar projects starts at $15,000"
  },
  // ... other cases
];

================
File: src/hooks/useAnalytics.ts
================
export const useTrackCTA = (id: string) => {
  useEffect(() => {
    const button = document.getElementById(id);
    button?.addEventListener('click', () => {
      window.gtag('event', 'cta_click', {
        'event_category': 'Conversion',
        'event_label': id
      });
    });
  }, [id]);
};

================
File: src/hooks/useCountdown.ts
================
// Этот файл можно полностью удалить

================
File: src/hooks/useLossCounter.ts
================
import { useState, useEffect } from 'react'

export const useLossCounter = () => {
  const [lossCounter, setLossCounter] = useState(384950)

  useEffect(() => {
    const interval = setInterval(() => {
      setLossCounter(prev => prev + 127)
    }, 1000)
    
    return () => clearInterval(interval)
  }, [])

  return lossCounter
}

================
File: src/lib/sentry.ts
================
import * as Sentry from '@sentry/nextjs';

const SENTRY_DSN = process.env.SENTRY_DSN || process.env.NEXT_PUBLIC_SENTRY_DSN;

Sentry.init({
  dsn: SENTRY_DSN,
  tracesSampleRate: 0.1,
  environment: process.env.NODE_ENV
});

================
File: src/scripts/heroAnimations.ts
================
export const initHeroAnimations = () => {
  // 3D эффект для карточек
  document.querySelectorAll('.project-card').forEach(card => {
    card.addEventListener('mousemove', (e: MouseEvent) => {
      const xAxis = (window.innerWidth / 2 - e.pageX) / 25;
      const yAxis = (window.innerHeight / 2 - e.pageY) / 25;
      (card as HTMLElement).style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;
    });
  });

  // Анимация взрыва
  const explodeCard = (cardId: string) => {
    const card = document.getElementById(cardId);
    if (!card) return;
    
    card.style.transform = 'scale(1.2)';
    card.style.filter = 'hue-rotate(90deg) blur(2px)';
    setTimeout(() => {
      card.style.transform = 'scale(1)';
      card.style.filter = 'none';
    }, 500);
  };
};

export default initHeroAnimations;

================
File: src/styles/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-[#FDF8F3] text-gray-900;
  }
  
  /* Добавить стили для улучшения читаемости текста */
  .text-content {
    @apply text-gray-800 leading-relaxed tracking-normal;
    font-variation-settings: 'opsz' 32, 'GRAD' 88;
  }
  
  /* Улучшить контрастность для важных элементов */
  .text-danger {
    @apply text-red-700;
  }
}

@layer components {
  .hero {
    @apply relative py-16 overflow-hidden;
  }

  .container {
    @apply max-w-[1200px] mx-auto px-4;
  }

  .trust-badge {
    @apply mb-8;
  }

  .platform-logos {
    @apply flex gap-4 mt-2;
  }

  .primary-cta {
    @apply bg-toxic-red text-white px-8 py-4 rounded-full font-bold 
           hover:bg-red-600 transition-all transform hover:scale-105 
           shadow-lg hover:shadow-xl;
  }

  .secondary-cta {
    @apply px-8 py-4 text-white/80 hover:text-white;
  }

  .cyber-overlay {
    @apply absolute inset-0 bg-black/50 z-[-1];
  }

  .pricing-widget {
    @apply bg-white/10 p-8 rounded-xl max-w-2xl mx-auto my-8;
  }

  .particles-animation {
    @apply pointer-events-none;
    background-image: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: particleFloat 20s linear infinite;
  }

  @keyframes particleFloat {
    0% { transform: translateY(0); }
    100% { transform: translateY(-50px); }
  }

  .text-gradient {
    @apply bg-clip-text text-transparent bg-gradient-to-r 
           from-primary-blue to-secondary-blue;
  }

  .toxicity-meter {
    @apply h-2 bg-gray-800 rounded-full overflow-hidden;
    transition: all 0.3s ease;
  }

  .toxicity-score {
    @apply h-full bg-gradient-to-r from-cyber-green to-danger;
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .ai-editor {
    @apply bg-white/10 rounded-xl p-6 resize-none min-h-[200px] text-white;
    &:focus {
      @apply ring-2 ring-cyber-green outline-none;
    }
  }

  /* Добавить стили для карточек и бейджей */
  .badge {
    @apply shadow-sm border border-opacity-10;
  }
  
  .card {
    @apply bg-white/90 backdrop-blur-sm;
  }
}

@layer utilities {
  .backdrop-blur-sm {
    backdrop-filter: blur(8px);
  }

  .text-toxic-red {
    color: #ff4d4f;
  }
  .bg-toxic-red {
    background-color: #ff4d4f;
  }
  .hover\:bg-toxic-red:hover {
    background-color: #ff4d4f;
  }
}

@keyframes glitch {
  0% { transform: translate(0) }
  20% { transform: translate(-2px, 2px) }
  40% { transform: translate(-2px, -2px) }
  60% { transform: translate(2px, 2px) }
  80% { transform: translate(2px, -2px) }
  100% { transform: translate(0) }
}

.primary-cta:hover {
  animation: glitch 0.3s infinite;
  background: linear-gradient(45deg, #FF4D4D 0%, transparent 50%, #00FF88 100%);
}

:root {
  --font-space-grotesk: 'Space Grotesk', sans-serif;
}

/* Добавьте сюда ваши кастомные стили */

@media (max-width: 640px) {
  .text-4xl { 
    font-size: 28px;
    line-height: 2.25rem;
  }
  .text-xl { 
    font-size: 18px;
    line-height: 1.5rem;
  }
  .hero h1 {
    font-size: 2.5rem;
    line-height: 1.2;
  }
  
  .hero li {
    font-size: 1rem;
    align-items: flex-start;
  }
  
  .hero button {
    width: 100%;
    padding: 1rem;
  }
}

.stats-grid {
  @apply grid grid-cols-1 md:grid-cols-3 gap-4;
}

.counter {
  @apply text-3xl font-bold text-danger;
}

/* Анимации */
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.float {
  animation: float 6s ease-in-out infinite;
}

/* Улучшим контрастность для кнопок */
.btn-primary {
  @apply bg-toxic-red text-white hover:bg-red-600 hover:shadow-lg transition-all;
}

/* Новая анимация пульсации */
@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.hover-pulse:hover {
  animation: pulse 1.5s infinite;
}

/* Параллакс-эффект */
.parallax-bg {
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

/* Testimonial Badges */
.testimonial-badge {
  @apply text-xs font-medium bg-gray-100 text-gray-600 px-2 py-1 rounded-full;
}

/* Emoji Containers */
.emoji-container {
  @apply flex items-center justify-center w-12 h-12 rounded-full bg-toxic-red/10 text-toxic-red;
}

/* Quote Styling */
.testimonial-quote {
  @apply pl-4 border-l-4 border-toxic-red italic text-gray-700;
}

/* Добавить адаптивные шрифты */
@screen md {
  .hero h1 {
    font-size: 4rem;
    line-height: 1.1;
  }
  
  .hero li {
    font-size: 1.1rem;
  }
}

/* Добавьте градиенты */
.bg-gradient-cyan {
  background-image: linear-gradient(135deg, #3B82F6 0%, #06B6D4 100%);
}

/* Тени для карточек */
.shadow-3xl {
  box-shadow: 0 25px 50px -12px rgba(42,92,170,0.15);
}

.hover\\:shadow-3xl:hover {
  box-shadow: 0 32px 64px -12px rgba(42,92,170,0.2);
}

/* Новые градиенты */
.bg-gradient-case-study {
  background-image: linear-gradient(135deg, rgba(42,92,170,0.05) 0%, rgba(255,255,255,1) 100%);
}

/* Анимация бейджа */
@keyframes pulse-badge {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.verified-badge {
  animation: pulse-badge 2s ease-in-out infinite;
}

/* Анимации */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

@media (max-width: 768px) {
  .case-study-card {
    padding: 1.5rem;
  }
  
  .case-study-title {
    font-size: 1.25rem;
  }
  
  .stats-badge {
    font-size: 0.875rem;
  }
}

/* Добавьте если отсутствует */
.bg-gray-50 {
  background-color: #f9fafb;
}

.space-y-6 > * + * {
  margin-top: 1.5rem;
}

/* Обновленные стили графиков */
.bar-chart-label {
  @apply text-sm font-medium text-gray-600;
}

.chart-tooltip {
  @apply bg-gray-800 text-white px-3 py-1.5 rounded-lg text-sm font-medium shadow-lg;
  position: relative;
}

.chart-tooltip::after {
  content: '';
  @apply absolute w-3 h-3 bg-gray-800 rotate-45 -bottom-1 left-1/2 -translate-x-1/2;
}

/* Стили для стеклянных кнопок */
.glass-button {
  @apply bg-white/10 backdrop-blur-lg border-2 border-opacity-20 hover:border-opacity-100;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Анимация волны при наведении */
.hover-wave::before {
  content: '';
  @apply absolute inset-0 bg-gradient-to-r from-[#2A5CAA]/10 to-transparent opacity-0;
  animation: wave 1.2s infinite;
}

@keyframes wave {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Стили для токсичных проектов */
.toxic-project {
  @apply bg-red-50/50 p-6 rounded-xl border-2 border-red-100;
}

.toxic-badge {
  @apply bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-medium;
}

/* Стили для безопасных проектов */
.safe-project {
  @apply bg-green-50/50 p-6 rounded-xl border-2 border-green-100;
}

.safe-badge {
  @apply bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium;
}

/* Анимация перехода */
.project-transition {
  @apply transition-all duration-300 ease-in-out;
}

/* Иконки рисков */
.risk-icon {
  @apply w-6 h-6 p-1 rounded-full bg-red-50 text-red-600;
}

/* Адаптивные стили */
@media (max-width: 768px) {
  .project-grid {
    @apply grid-cols-1 gap-6;
  }
  
  .project-card {
    @apply p-4;
  }
  
  .risk-item {
    @apply p-3;
  }
}

/* Новые градиенты */
.bg-gradient-success-card {
  background: linear-gradient(145deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.6) 100%);
  backdrop-filter: blur(20px);
}

/* Тени */
.shadow-impact {
  box-shadow: 0 25px 50px -12px rgba(42,92,170,0.15), 
              0 8px 24px -4px rgba(42,92,170,0.1);
}

/* Анимации */
@keyframes float-card {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.hover-float:hover {
  animation: float-card 6s ease-in-out infinite;
}

/* Иконки верификации */
.verified-badge {
  background: linear-gradient(45deg, #2A5CAA 0%, #3B82F6 100%);
  box-shadow: 0 4px 12px rgba(42,92,170,0.25);
}

/* Улучшенные тени */
.shadow-story-card {
  box-shadow: 0 32px 64px -12px rgba(42,92,170,0.2), 
              0 16px 32px -16px rgba(0,0,0,0.1);
}

/* Анимация карточек */
@keyframes card-float {
  0%, 100% { transform: translateY(0) rotate(-1deg); }
  50% { transform: translateY(-12px) rotate(1deg); }
}

.story-card:hover {
  animation: card-float 6s ease-in-out infinite;
}

/* Градиентные обводки */
.gradient-border {
  position: relative;
  &::before {
    content: '';
    @apply absolute inset-0 rounded-3xl p-px bg-gradient-to-r from-[#2A5CAA] to-[#3B82F6];
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  }
}

================
File: .env.local
================
NEXT_PUBLIC_GOOGLE_SCRIPT_URL=https://script.google.com/macros/s/AKfycbwtgVj1y3Oia3wy19afi3p1xGehWAjy9Dnm_Y9GfkHueAv7gMw6MBNwzAh9ZYpy7FPL9g/exec

================
File: .gitignore
================
# Node modules
node_modules/

# Build output
dist/
build/

# Logs
logs
*.log
npm-debug.log*

# Environment variables
.env

================
File: app.js
================
// Dynamic Pricing Calculator
function calculatePrice() {
    const clientBudget = document.getElementById('client-budget').value;
    const toxicityMultiplier = 1.25; // This would come from AI analysis
    const recommendedPrice = clientBudget * toxicityMultiplier;
    
    document.querySelector('.multiplier').textContent = `${toxicityMultiplier}x`;
    document.querySelector('.final-price').textContent = `Your price: $${recommendedPrice.toFixed(0)}`;
}

// Animated Loss Counter
let lossCounter = 384950;
setInterval(() => {
    lossCounter += 127;
    document.getElementById('loss-counter').textContent = `$${lossCounter.toLocaleString()} lost this week`;
}, 1000);

// Initialize FOMO Timer
function startTimer(duration) {
    let timer = duration, hours, minutes, seconds;
    setInterval(() => {
        hours = parseInt(timer / 3600, 10);
        minutes = parseInt((timer % 3600) / 60, 10);
        seconds = parseInt(timer % 60, 10);

        document.getElementById('price-timer').textContent = 
            `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

        if (++timer >= 86400) timer = 0;
    }, 1000);
}

startTimer(0);

// Добавляем 3D эффект для карточек
document.querySelectorAll('.project-card').forEach(card => {
    card.addEventListener('mousemove', (e) => {
        const xAxis = (window.innerWidth / 2 - e.pageX) / 25;
        const yAxis = (window.innerHeight / 2 - e.pageY) / 25;
        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;
    });
});

// Анимация взрыва для токсичных ТЗ
function explodeCard(cardId) {
    const card = document.getElementById(cardId);
    card.style.transform = 'scale(1.2)';
    card.style.filter = 'hue-rotate(90deg) blur(2px)';
    setTimeout(() => {
        card.style.transform = 'scale(1)';
        card.style.filter = 'none';
    }, 500);
}

================
File: index.html
================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ToxiGuard - AI Protection Against Toxic Clients</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&display=swap" rel="stylesheet">
    <script>
      window.trackEvent = (action) => {
        fetch('/api/track', {
          method: 'POST',
          body: JSON.stringify({ action })
        })
      }
    </script>
</head>
<body>
    <!-- Hero Section -->
    <section class="hero">
        <div class="cyber-overlay"></div>
        <div class="container">
            <div class="trust-badge">
                <span>Trusted by 8,214+ freelancers</span>
                <div class="platform-logos">
                    <img src="upwork-logo.svg" alt="Upwork">
                    <img src="fiverr-logo.svg" alt="Fiverr">
                </div>
            </div>
            <h1>Stop Wasting 20+ Hours on Toxic Clients</h1>
            <p class="subhead">AI scans project descriptions for 🚩unrealistic deadlines, 🚩vague budgets, 🚩payment risks</p>
            <div class="cta-buttons">
                <button class="primary-cta glitch" data-text="SCAN_NOW" onclick="trackEvent('cta_click')">Scan My Project Now (Free) →</button>
                <button class="secondary-cta">Watch Demo (1 min)</button>
            </div>
        </div>
        <div class="abstract-dots-pattern"></div>
    </section>

    <!-- Dynamic Pricing Widget -->
    <section class="pricing-widget">
        <div class="container">
            <h3>AI-Priced Project Calculator</h3>
            <div class="calculator">
                <input type="number" id="client-budget" placeholder="Client's budget ($)">
                <button onclick="calculatePrice()">Get AI Recommendation</button>
                <div id="price-result">
                    <span class="multiplier">1.25x</span>
                    <span class="final-price">Your price: $625</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Other sections will follow similar structure -->
    
    <script src="app.js"></script>

    <!-- Добавляем новые секции перед закрывающим тегом body -->
    <section class="cyber-analytics">
        <div class="matrix-scan"></div>
        <div class="grid-lines"></div>
    </section>
</body>
</html>

================
File: next-env.d.ts
================
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.

================
File: next.config.js
================
module.exports = {
  // УДАЛИТЬ ПРАВИЛА REWRITES
  async headers() {
    return [
      {
        source: '/(.*)',
        headers: [
          {
            key: 'X-Content-Type-Options',
            value: 'nosniff'
          }
        ],
      },
    ]
  }
};

================
File: package.json
================
{
  "name": "toxi-guard",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.0",
    "@heroicons/react": "^2.2.0",
    "@radix-ui/react-tooltip": "^1.1.7",
    "@sentry/nextjs": "^8.53.0",
    "framer-motion": "^12.0.6",
    "lucide-react": "^0.474.0",
    "next": "^15.1.6",
    "next-seo": "^6.6.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "autoprefixer": "^10.4.17",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.7.3"
  }
}

================
File: postcss.config.js
================
module.exports = {
  plugins: {
    'tailwindcss/nesting': {},
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: styles.css
================
/* Base Styles */
body {
    font-family: 'Inter', sans-serif;
    background: linear-gradient(135deg, #0A1A3A, #1A3B6A);
    color: white;
}

/* Hero Section */
.hero {
    position: relative;
    padding: 4rem 0;
    overflow: hidden;
}

.red-flags-animation {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('red-flags.svg') repeat;
    animation: floatFlags 20s linear infinite;
    opacity: 0.3;
}

@keyframes floatFlags {
    0% { transform: translateY(0); }
    100% { transform: translateY(-100%); }
}

.cta-buttons {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
}

.primary-cta {
    transition: all 0.3s ease;
    background-size: 200% auto;
    background: none;
    position: relative;
    border: 2px solid #FF4D4D;
    color: #00FF88;
    text-shadow: 0 0 10px #00FF88;
}

.primary-cta::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #FF4D4D;
    clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
    opacity: 0.8;
}

.primary-cta:hover {
    background-position: right center;
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(255, 77, 77, 0.3);
}

/* Матричная сетка */
.grid-lines {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        transparent 0px,
        transparent 19px,
        rgba(0, 255, 136, 0.1) 20px
    );
    pointer-events: none;
    z-index: -1;
}

/* Pricing Widget */
.pricing-widget {
    background: rgba(255, 255, 255, 0.1);
    padding: 2rem;
    border-radius: 15px;
    margin: 2rem auto;
    max-width: 600px;
}

.calculator {
    display: grid;
    gap: 1rem;
    margin-top: 1.5rem;
}

#client-budget {
    padding: 0.8rem;
    border-radius: 8px;
    border: none;
    background: rgba(255, 255, 255, 0.1);
    color: white;
}

.multiplier {
    background: #ff4757;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-weight: bold;
}

/* Add responsive design */
@media (max-width: 768px) {
    .cta-buttons {
        flex-direction: column;
    }
}

================
File: tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      colors: {
        'primary-blue': '#2A5CAA',
        'success-green': '#4CAF50',
        'toxic-red': '#EF4444',
        'warning-orange': '#F59E0B',
        primary: '#2A2A2A',
        secondary: '#5E5E5E',
        accent: '#00C389',
        'accent-dark': '#008C65'
      },
      fontFamily: {
        sans: ['Inter', 'sans-serif'],
        headings: ['Space Grotesk', 'sans-serif']
      },
      boxShadow: {
        'cyber-green/30': '0 0 30px rgba(0, 255, 136, 0.3)',
      },
      animation: {
        'float': 'float 6s ease-in-out infinite',
      },
      keyframes: {
        float: {
          '0%, 100%': { transform: 'translateY(0)' },
          '50%': { transform: 'translateY(-10px)' },
        }
      }
    },
  },
  plugins: [],
}

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": [
        "./src/*"
      ]
    },
    "strictNullChecks": true,
    "target": "ES2017"
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx",
    "**/*.css"
  ],
  "exclude": [
    "node_modules"
  ]
}
